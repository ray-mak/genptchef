// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//after updating schemas
//npx prisma generate, npx prisma migrate dev, name(ex): user_post_create

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  clerkUserId String @unique
  email String @unique
  name String
  username String? 
  imageUrl String
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt
  ingredients Ingredient[]
  recipes Recipe[]
  posts Post[]
}

model Ingredient {
  id String @id @default(uuid())
  text String
  userId String
  user User @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@index([userId])
}

model Recipe {
  id String @id @default(uuid())
  userId String
  title String
  ingredients String[]
  instructions String[]
  cookTime String
  user User @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime @default(now())
  @@index([userId])
}

model Post {
  id String @id @default(uuid())
  userId String
  name String
  username String?
  imageUrl String
  title String
  ingredients String[]
  instructions String[]
  cookTime String
  notes String
  user User @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([userId])
}